import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild } from '@angular/core';
import { asapScheduler } from 'rxjs';
import { ObjectHelper } from '../../helper/object-helper';
var DonutComponent = /** @class */ (function () {
    function DonutComponent() {
    }
    DonutComponent.prototype.createControl = function () {
        var _this = this;
        asapScheduler.schedule(function () {
            var originalElement = $(_this.donut.nativeElement);
            ObjectHelper.hide(originalElement);
            if (_this.clonedElement) {
                _this.clonedElement.remove();
            }
            _this.clonedElement = originalElement.clone();
            ObjectHelper.show(_this.clonedElement);
            originalElement.parent().append(_this.clonedElement);
            _this.donutObj = _this.clonedElement.donut().data('donut');
        });
    };
    DonutComponent.prototype.ngOnInit = function () {
        this.createControl();
    };
    DonutComponent.prototype.ngOnChanges = function (changes) {
        if (Object.keys(changes).filter(function (c) { return c !== 'value'; }).length > 0) {
            this.createControl();
        }
        else {
            if (this.donutObj) {
                this.donutObj.val(this.value);
            }
        }
    };
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], DonutComponent.prototype, "value", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], DonutComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], DonutComponent.prototype, "radius", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], DonutComponent.prototype, "hole", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DonutComponent.prototype, "background", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DonutComponent.prototype, "color", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DonutComponent.prototype, "stroke", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DonutComponent.prototype, "fill", void 0);
    __decorate([
        Input('font-size'),
        __metadata("design:type", Number)
    ], DonutComponent.prototype, "fontSize", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], DonutComponent.prototype, "total", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DonutComponent.prototype, "caption", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], DonutComponent.prototype, "animate", void 0);
    __decorate([
        Input('show-value'),
        __metadata("design:type", Boolean)
    ], DonutComponent.prototype, "showValue", void 0);
    __decorate([
        ViewChild('donut', { static: true }),
        __metadata("design:type", ElementRef)
    ], DonutComponent.prototype, "donut", void 0);
    DonutComponent = __decorate([
        Component({
            selector: 'm4-donut',
            template: "<div #donut\r\n     [attr.data-value]=\"value\"\r\n     [attr.data-size]=\"size\"\r\n     [attr.data-radius]=\"radius\"\r\n     [attr.data-hole]=\"hole\"\r\n     [attr.data-background]=\"background\"\r\n     [attr.data-color]=\"color\"\r\n     [attr.data-stroke]=\"stroke\"\r\n     [attr.data-fill]=\"fill\"\r\n     [attr.data-font-size]=\"fontSize\"\r\n     [attr.data-total]=\"total\"\r\n     [attr.data-cap]=\"caption\"\r\n     [attr.data-animate]=\"animate\"\r\n     [attr.data-show-value]=\"showValue\"></div>\r\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [""]
        }),
        __metadata("design:paramtypes", [])
    ], DonutComponent);
    return DonutComponent;
}());
export { DonutComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9udXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbWV0cm80LyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL2RvbnV0L2RvbnV0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFvQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakksT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUNuQyxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFVeEQ7SUFtQkU7SUFBZ0IsQ0FBQztJQUVULHNDQUFhLEdBQXJCO1FBQUEsaUJBZUM7UUFkQyxhQUFhLENBQUMsUUFBUSxDQUFDO1lBQ3JCLElBQU0sZUFBZSxHQUFHLENBQUMsQ0FBQyxLQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3BELFlBQVksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7WUFFbkMsSUFBSSxLQUFJLENBQUMsYUFBYSxFQUFFO2dCQUN0QixLQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDO2FBQzdCO1lBRUQsS0FBSSxDQUFDLGFBQWEsR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDN0MsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDdEMsZUFBZSxDQUFDLE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7WUFFcEQsS0FBSSxDQUFDLFFBQVEsR0FBRyxLQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMzRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxpQ0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxvQ0FBVyxHQUFYLFVBQVksT0FBc0I7UUFDaEMsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsS0FBSyxPQUFPLEVBQWIsQ0FBYSxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUM5RCxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7U0FDdEI7YUFBTTtZQUNMLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDakIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQy9CO1NBQ0Y7SUFDSCxDQUFDO0lBakRRO1FBQVIsS0FBSyxFQUFFOztpREFBZTtJQUNkO1FBQVIsS0FBSyxFQUFFOztnREFBYztJQUNiO1FBQVIsS0FBSyxFQUFFOztrREFBZ0I7SUFDZjtRQUFSLEtBQUssRUFBRTs7Z0RBQWM7SUFDYjtRQUFSLEtBQUssRUFBRTs7c0RBQW9CO0lBQ25CO1FBQVIsS0FBSyxFQUFFOztpREFBZTtJQUNkO1FBQVIsS0FBSyxFQUFFOztrREFBZ0I7SUFDZjtRQUFSLEtBQUssRUFBRTs7Z0RBQWM7SUFDRjtRQUFuQixLQUFLLENBQUMsV0FBVyxDQUFDOztvREFBa0I7SUFDNUI7UUFBUixLQUFLLEVBQUU7O2lEQUFlO0lBQ2Q7UUFBUixLQUFLLEVBQUU7O21EQUFpQjtJQUNoQjtRQUFSLEtBQUssRUFBRTs7bURBQWlCO0lBQ0o7UUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7cURBQW9CO0lBRUY7UUFBckMsU0FBUyxDQUFDLE9BQU8sRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztrQ0FBZ0IsVUFBVTtpREFBQztJQWZyRCxjQUFjO1FBTjFCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxVQUFVO1lBQ3BCLGtoQkFBcUM7WUFFckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O1NBQ2hELENBQUM7O09BQ1csY0FBYyxDQW1EMUI7SUFBRCxxQkFBQztDQUFBLEFBbkRELElBbURDO1NBbkRZLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcywgVmlld0NoaWxkfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHthc2FwU2NoZWR1bGVyfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHtPYmplY3RIZWxwZXJ9IGZyb20gJy4uLy4uL2hlbHBlci9vYmplY3QtaGVscGVyJztcclxuXHJcbmRlY2xhcmUgdmFyICQ6IGFueTtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbTQtZG9udXQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9kb251dC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vZG9udXQuY29tcG9uZW50LmNzcyddLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEb251dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICBASW5wdXQoKSB2YWx1ZTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpIHNpemU6IG51bWJlcjtcclxuICBASW5wdXQoKSByYWRpdXM6IG51bWJlcjtcclxuICBASW5wdXQoKSBob2xlOiBudW1iZXI7XHJcbiAgQElucHV0KCkgYmFja2dyb3VuZDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGNvbG9yOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgc3Ryb2tlOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgZmlsbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgnZm9udC1zaXplJykgZm9udFNpemU6IG51bWJlcjtcclxuICBASW5wdXQoKSB0b3RhbDogbnVtYmVyO1xyXG4gIEBJbnB1dCgpIGNhcHRpb246IHN0cmluZztcclxuICBASW5wdXQoKSBhbmltYXRlOiBudW1iZXI7XHJcbiAgQElucHV0KCdzaG93LXZhbHVlJykgc2hvd1ZhbHVlOiBib29sZWFuO1xyXG5cclxuICBAVmlld0NoaWxkKCdkb251dCcsIHsgc3RhdGljOiB0cnVlIH0pIHByaXZhdGUgZG9udXQ6IEVsZW1lbnRSZWY7XHJcbiAgcHJpdmF0ZSBjbG9uZWRFbGVtZW50OiBhbnk7XHJcbiAgcHJpdmF0ZSBkb251dE9iajogYW55O1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBwcml2YXRlIGNyZWF0ZUNvbnRyb2woKSB7XHJcbiAgICBhc2FwU2NoZWR1bGVyLnNjaGVkdWxlKCgpID0+IHtcclxuICAgICAgY29uc3Qgb3JpZ2luYWxFbGVtZW50ID0gJCh0aGlzLmRvbnV0Lm5hdGl2ZUVsZW1lbnQpO1xyXG4gICAgICBPYmplY3RIZWxwZXIuaGlkZShvcmlnaW5hbEVsZW1lbnQpO1xyXG5cclxuICAgICAgaWYgKHRoaXMuY2xvbmVkRWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuY2xvbmVkRWxlbWVudC5yZW1vdmUoKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5jbG9uZWRFbGVtZW50ID0gb3JpZ2luYWxFbGVtZW50LmNsb25lKCk7XHJcbiAgICAgIE9iamVjdEhlbHBlci5zaG93KHRoaXMuY2xvbmVkRWxlbWVudCk7XHJcbiAgICAgIG9yaWdpbmFsRWxlbWVudC5wYXJlbnQoKS5hcHBlbmQodGhpcy5jbG9uZWRFbGVtZW50KTtcclxuXHJcbiAgICAgIHRoaXMuZG9udXRPYmogPSB0aGlzLmNsb25lZEVsZW1lbnQuZG9udXQoKS5kYXRhKCdkb251dCcpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuY3JlYXRlQ29udHJvbCgpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKE9iamVjdC5rZXlzKGNoYW5nZXMpLmZpbHRlcihjID0+IGMgIT09ICd2YWx1ZScpLmxlbmd0aCA+IDApIHtcclxuICAgICAgdGhpcy5jcmVhdGVDb250cm9sKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodGhpcy5kb251dE9iaikge1xyXG4gICAgICAgIHRoaXMuZG9udXRPYmoudmFsKHRoaXMudmFsdWUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==