import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges } from '@angular/core';
import { asapScheduler } from 'rxjs';
var DraggableDirective = /** @class */ (function () {
    function DraggableDirective(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        this.dragStart = new EventEmitter();
        this.dragStop = new EventEmitter();
        this.dragMove = new EventEmitter();
    }
    DraggableDirective.prototype.createElement = function () {
        var _this = this;
        asapScheduler.schedule(function () {
            if (_this.draggableData) {
                if (_this.dragArea) {
                    _this.draggableData.elem.remove();
                }
                _this.draggableData.destroy();
            }
            var draggableOptions = {
                onDragStart: function (position) {
                    _this.dragStart.emit(position);
                },
                onDragStop: function (position) {
                    _this.dragStop.emit(position);
                },
                onDragMove: function (position) {
                    _this.dragMove.emit(position);
                }
            };
            if (_this.dragElement) {
                draggableOptions.dragElement = _this.dragElement;
            }
            if (_this.dragArea) {
                draggableOptions.dragArea = _this.dragArea;
            }
            _this.draggableData = $(_this.element.nativeElement).draggable(draggableOptions).data('draggable');
        });
    };
    DraggableDirective.prototype.setPosition = function (position) {
        if (this.draggableData) {
            $(this.draggableData.elem).css({
                left: position.x + 'px',
                top: position.y + 'px'
            });
        }
    };
    DraggableDirective.prototype.ngOnInit = function () {
        this.createElement();
    };
    DraggableDirective.prototype.ngOnChanges = function (changes) {
        this.createElement();
    };
    DraggableDirective.prototype.ngOnDestroy = function () {
        $(this.element.nativeElement).remove();
    };
    DraggableDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input('m4-draggable'),
        __metadata("design:type", String)
    ], DraggableDirective.prototype, "dragElement", void 0);
    __decorate([
        Input('drag-area'),
        __metadata("design:type", String)
    ], DraggableDirective.prototype, "dragArea", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], DraggableDirective.prototype, "dragStart", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], DraggableDirective.prototype, "dragStop", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], DraggableDirective.prototype, "dragMove", void 0);
    DraggableDirective = __decorate([
        Directive({
            selector: '[m4-draggable]'
        }),
        __metadata("design:paramtypes", [ElementRef, Renderer2])
    ], DraggableDirective);
    return DraggableDirective;
}());
export { DraggableDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2dhYmxlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLW1ldHJvNC8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9scy9kcmFnZ2FibGUvZHJhZ2dhYmxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLGFBQWEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6SSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBWW5DO0lBVUUsNEJBQW9CLE9BQW1CLEVBQVUsUUFBbUI7UUFBaEQsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQUFVLGFBQVEsR0FBUixRQUFRLENBQVc7UUFOMUQsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFnQixDQUFDO1FBQzdDLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBZ0IsQ0FBQztRQUM1QyxhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQWdCLENBQUM7SUFJaUIsQ0FBQztJQUVoRSwwQ0FBYSxHQUFyQjtRQUFBLGlCQWdDQztRQS9CQyxhQUFhLENBQUMsUUFBUSxDQUFDO1lBQ3JCLElBQUksS0FBSSxDQUFDLGFBQWEsRUFBRTtnQkFDdEIsSUFBSSxLQUFJLENBQUMsUUFBUSxFQUFFO29CQUNqQixLQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztpQkFDbEM7Z0JBRUQsS0FBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsQ0FBQzthQUM5QjtZQUVELElBQU0sZ0JBQWdCLEdBQVE7Z0JBQzVCLFdBQVcsRUFBRSxVQUFDLFFBQXNCO29CQUNsQyxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDaEMsQ0FBQztnQkFDRCxVQUFVLEVBQUUsVUFBQyxRQUFzQjtvQkFDakMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQy9CLENBQUM7Z0JBQ0QsVUFBVSxFQUFFLFVBQUMsUUFBc0I7b0JBQ2pDLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUMvQixDQUFDO2FBQ0YsQ0FBQztZQUVGLElBQUksS0FBSSxDQUFDLFdBQVcsRUFBRTtnQkFDcEIsZ0JBQWdCLENBQUMsV0FBVyxHQUFHLEtBQUksQ0FBQyxXQUFXLENBQUM7YUFDakQ7WUFFRCxJQUFJLEtBQUksQ0FBQyxRQUFRLEVBQUU7Z0JBQ2pCLGdCQUFnQixDQUFDLFFBQVEsR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDO2FBQzNDO1lBRUQsS0FBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDbkcsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sd0NBQVcsR0FBbEIsVUFBbUIsUUFBc0I7UUFDdkMsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQ3RCLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQztnQkFDN0IsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSTtnQkFDdkIsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSTthQUN2QixDQUFDLENBQUM7U0FDSjtJQUNILENBQUM7SUFFRCxxQ0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCx3Q0FBVyxHQUFYLFVBQVksT0FBc0I7UUFDaEMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCx3Q0FBVyxHQUFYO1FBQ0UsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDekMsQ0FBQzs7Z0JBdkQ0QixVQUFVO2dCQUFvQixTQUFTOztJQVQ3QztRQUF0QixLQUFLLENBQUMsY0FBYyxDQUFDOzsyREFBcUI7SUFDdkI7UUFBbkIsS0FBSyxDQUFDLFdBQVcsQ0FBQzs7d0RBQWtCO0lBRTNCO1FBQVQsTUFBTSxFQUFFOzt5REFBOEM7SUFDN0M7UUFBVCxNQUFNLEVBQUU7O3dEQUE2QztJQUM1QztRQUFULE1BQU0sRUFBRTs7d0RBQTZDO0lBTjNDLGtCQUFrQjtRQUg5QixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsZ0JBQWdCO1NBQzNCLENBQUM7eUNBVzZCLFVBQVUsRUFBb0IsU0FBUztPQVZ6RCxrQkFBa0IsQ0FrRTlCO0lBQUQseUJBQUM7Q0FBQSxBQWxFRCxJQWtFQztTQWxFWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgT3V0cHV0LCBSZW5kZXJlcjIsIFNpbXBsZUNoYW5nZXN9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge2FzYXBTY2hlZHVsZXJ9IGZyb20gJ3J4anMnO1xyXG5cclxuZGVjbGFyZSB2YXIgJDogYW55O1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEcmFnUG9zaXRpb24ge1xyXG4gIHg6IG51bWJlcjtcclxuICB5OiBudW1iZXI7XHJcbn1cclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW200LWRyYWdnYWJsZV0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEcmFnZ2FibGVEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcclxuICBASW5wdXQoJ200LWRyYWdnYWJsZScpIGRyYWdFbGVtZW50OiBzdHJpbmc7XHJcbiAgQElucHV0KCdkcmFnLWFyZWEnKSBkcmFnQXJlYTogc3RyaW5nO1xyXG5cclxuICBAT3V0cHV0KCkgZHJhZ1N0YXJ0ID0gbmV3IEV2ZW50RW1pdHRlcjxEcmFnUG9zaXRpb24+KCk7XHJcbiAgQE91dHB1dCgpIGRyYWdTdG9wID0gbmV3IEV2ZW50RW1pdHRlcjxEcmFnUG9zaXRpb24+KCk7XHJcbiAgQE91dHB1dCgpIGRyYWdNb3ZlID0gbmV3IEV2ZW50RW1pdHRlcjxEcmFnUG9zaXRpb24+KCk7XHJcblxyXG4gIHByaXZhdGUgZHJhZ2dhYmxlRGF0YTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmLCBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHt9XHJcblxyXG4gIHByaXZhdGUgY3JlYXRlRWxlbWVudCgpIHtcclxuICAgIGFzYXBTY2hlZHVsZXIuc2NoZWR1bGUoKCkgPT4ge1xyXG4gICAgICBpZiAodGhpcy5kcmFnZ2FibGVEYXRhKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZHJhZ0FyZWEpIHtcclxuICAgICAgICAgIHRoaXMuZHJhZ2dhYmxlRGF0YS5lbGVtLnJlbW92ZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5kcmFnZ2FibGVEYXRhLmRlc3Ryb3koKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgZHJhZ2dhYmxlT3B0aW9uczogYW55ID0ge1xyXG4gICAgICAgIG9uRHJhZ1N0YXJ0OiAocG9zaXRpb246IERyYWdQb3NpdGlvbikgPT4ge1xyXG4gICAgICAgICAgdGhpcy5kcmFnU3RhcnQuZW1pdChwb3NpdGlvbik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkRyYWdTdG9wOiAocG9zaXRpb246IERyYWdQb3NpdGlvbikgPT4ge1xyXG4gICAgICAgICAgdGhpcy5kcmFnU3RvcC5lbWl0KHBvc2l0aW9uKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uRHJhZ01vdmU6IChwb3NpdGlvbjogRHJhZ1Bvc2l0aW9uKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLmRyYWdNb3ZlLmVtaXQocG9zaXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIGlmICh0aGlzLmRyYWdFbGVtZW50KSB7XHJcbiAgICAgICAgZHJhZ2dhYmxlT3B0aW9ucy5kcmFnRWxlbWVudCA9IHRoaXMuZHJhZ0VsZW1lbnQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh0aGlzLmRyYWdBcmVhKSB7XHJcbiAgICAgICAgZHJhZ2dhYmxlT3B0aW9ucy5kcmFnQXJlYSA9IHRoaXMuZHJhZ0FyZWE7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuZHJhZ2dhYmxlRGF0YSA9ICQodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpLmRyYWdnYWJsZShkcmFnZ2FibGVPcHRpb25zKS5kYXRhKCdkcmFnZ2FibGUnKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNldFBvc2l0aW9uKHBvc2l0aW9uOiBEcmFnUG9zaXRpb24pIHtcclxuICAgIGlmICh0aGlzLmRyYWdnYWJsZURhdGEpIHtcclxuICAgICAgJCh0aGlzLmRyYWdnYWJsZURhdGEuZWxlbSkuY3NzKHtcclxuICAgICAgICBsZWZ0OiBwb3NpdGlvbi54ICsgJ3B4JyxcclxuICAgICAgICB0b3A6IHBvc2l0aW9uLnkgKyAncHgnXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmNyZWF0ZUVsZW1lbnQoKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgIHRoaXMuY3JlYXRlRWxlbWVudCgpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICAkKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50KS5yZW1vdmUoKTtcclxuICB9XHJcbn1cclxuIl19