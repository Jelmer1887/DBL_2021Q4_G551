import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild } from '@angular/core';
import { asapScheduler } from 'rxjs';
import { ObjectHelper } from '../../helper/object-helper';
var PanelComponent = /** @class */ (function () {
    function PanelComponent() {
    }
    PanelComponent.prototype.createElement = function () {
        var _this = this;
        asapScheduler.schedule(function () {
            var originalElement = $(_this.panel.nativeElement);
            ObjectHelper.hide(originalElement);
            if (_this.clonedElement) {
                _this.clonedElement.children().appendTo(originalElement);
                _this.clonedElement.parent().remove();
            }
            _this.clonedElement = originalElement.clone();
            originalElement.children().appendTo(_this.clonedElement);
            ObjectHelper.show(_this.clonedElement);
            originalElement.parent().append(_this.clonedElement);
            _this.panelObj = _this.clonedElement.panel({
                customButtons: _this.customButtons
            }).data('panel');
        });
    };
    PanelComponent.prototype.ngOnInit = function () {
        this.createElement();
    };
    PanelComponent.prototype.ngOnChanges = function (changes) {
        this.createElement();
    };
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], PanelComponent.prototype, "width", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], PanelComponent.prototype, "height", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PanelComponent.prototype, "title", void 0);
    __decorate([
        Input('title-icon'),
        __metadata("design:type", String)
    ], PanelComponent.prototype, "titleIcon", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], PanelComponent.prototype, "collapsible", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], PanelComponent.prototype, "collapsed", void 0);
    __decorate([
        Input('custom-buttons'),
        __metadata("design:type", Array)
    ], PanelComponent.prototype, "customButtons", void 0);
    __decorate([
        Input('cls-panel'),
        __metadata("design:type", String)
    ], PanelComponent.prototype, "clsPanel", void 0);
    __decorate([
        Input('cls-title'),
        __metadata("design:type", String)
    ], PanelComponent.prototype, "clsTitle", void 0);
    __decorate([
        Input('cls-title-caption'),
        __metadata("design:type", String)
    ], PanelComponent.prototype, "clsTitleCaption", void 0);
    __decorate([
        Input('cls-title-icon'),
        __metadata("design:type", String)
    ], PanelComponent.prototype, "clsTitleIcon", void 0);
    __decorate([
        Input('cls-content'),
        __metadata("design:type", String)
    ], PanelComponent.prototype, "clsContent", void 0);
    __decorate([
        Input('cls-collapse-toggle'),
        __metadata("design:type", String)
    ], PanelComponent.prototype, "clsCollapseToggle", void 0);
    __decorate([
        ViewChild('panel', { static: true }),
        __metadata("design:type", ElementRef)
    ], PanelComponent.prototype, "panel", void 0);
    PanelComponent = __decorate([
        Component({
            selector: 'm4-panel',
            template: "<div #panel\r\n     [attr.data-width]=\"width\"\r\n     [attr.data-height]=\"height\"\r\n     [attr.data-title-caption]=\"title\"\r\n     [attr.data-title-icon]=\"titleIcon\"\r\n     [attr.data-collapsible]=\"collapsible\"\r\n     [attr.data-collapsed]=\"collapsed\"\r\n\r\n     [attr.data-cls-panel]=\"clsPanel\"\r\n     [attr.data-cls-title]=\"clsTitle\"\r\n     [attr.data-cls-title-caption]=\"clsTitleCaption\"\r\n     [attr.data-cls-title-icon]=\"clsTitleIcon\"\r\n     [attr.data-cls-content]=\"clsContent\"\r\n     [attr.data-cls-collapse-toggle]=\"clsCollapseToggle\">\r\n  <ng-content></ng-content>\r\n</div>\r\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [""]
        }),
        __metadata("design:paramtypes", [])
    ], PanelComponent);
    return PanelComponent;
}());
export { PanelComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFuZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbWV0cm80LyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL3BhbmVsL3BhbmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFvQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakksT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUNuQyxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFVeEQ7SUFvQkU7SUFBZ0IsQ0FBQztJQUVqQixzQ0FBYSxHQUFiO1FBQUEsaUJBbUJDO1FBbEJDLGFBQWEsQ0FBQyxRQUFRLENBQUM7WUFDckIsSUFBTSxlQUFlLEdBQUcsQ0FBQyxDQUFDLEtBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDcEQsWUFBWSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUVuQyxJQUFJLEtBQUksQ0FBQyxhQUFhLEVBQUU7Z0JBQ3RCLEtBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDO2dCQUN4RCxLQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDO2FBQ3RDO1lBRUQsS0FBSSxDQUFDLGFBQWEsR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDN0MsZUFBZSxDQUFDLFFBQVEsRUFBRSxDQUFDLFFBQVEsQ0FBQyxLQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDeEQsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDdEMsZUFBZSxDQUFDLE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7WUFFcEQsS0FBSSxDQUFDLFFBQVEsR0FBRyxLQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztnQkFDdkMsYUFBYSxFQUFFLEtBQUksQ0FBQyxhQUFhO2FBQ2xDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbkIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsaUNBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRUQsb0NBQVcsR0FBWCxVQUFZLE9BQXNCO1FBQ2hDLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBaERRO1FBQVIsS0FBSyxFQUFFOztpREFBZTtJQUNkO1FBQVIsS0FBSyxFQUFFOztrREFBZ0I7SUFDZjtRQUFSLEtBQUssRUFBRTs7aURBQWU7SUFDRjtRQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOztxREFBbUI7SUFDOUI7UUFBUixLQUFLLEVBQUU7O3VEQUFzQjtJQUNyQjtRQUFSLEtBQUssRUFBRTs7cURBQW9CO0lBQ0g7UUFBeEIsS0FBSyxDQUFDLGdCQUFnQixDQUFDOzt5REFBaUU7SUFFckU7UUFBbkIsS0FBSyxDQUFDLFdBQVcsQ0FBQzs7b0RBQWtCO0lBQ2pCO1FBQW5CLEtBQUssQ0FBQyxXQUFXLENBQUM7O29EQUFrQjtJQUNUO1FBQTNCLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQzs7MkRBQXlCO0lBQzNCO1FBQXhCLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQzs7d0RBQXNCO0lBQ3hCO1FBQXJCLEtBQUssQ0FBQyxhQUFhLENBQUM7O3NEQUFvQjtJQUNYO1FBQTdCLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQzs7NkRBQTJCO0lBRWxCO1FBQXJDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7a0NBQVEsVUFBVTtpREFBQztJQWhCN0MsY0FBYztRQU4xQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsVUFBVTtZQUNwQix5bkJBQXFDO1lBRXJDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztTQUNoRCxDQUFDOztPQUNXLGNBQWMsQ0FrRDFCO0lBQUQscUJBQUM7Q0FBQSxBQWxERCxJQWtEQztTQWxEWSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMsIFZpZXdDaGlsZH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7YXNhcFNjaGVkdWxlcn0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7T2JqZWN0SGVscGVyfSBmcm9tICcuLi8uLi9oZWxwZXIvb2JqZWN0LWhlbHBlcic7XHJcblxyXG5kZWNsYXJlIHZhciAkOiBhbnk7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ200LXBhbmVsJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcGFuZWwuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3BhbmVsLmNvbXBvbmVudC5jc3MnXSxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUGFuZWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgQElucHV0KCkgd2lkdGg6IG51bWJlcjtcclxuICBASW5wdXQoKSBoZWlnaHQ6IG51bWJlcjtcclxuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgndGl0bGUtaWNvbicpIHRpdGxlSWNvbjogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGNvbGxhcHNpYmxlOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpIGNvbGxhcHNlZDogYm9vbGVhbjtcclxuICBASW5wdXQoJ2N1c3RvbS1idXR0b25zJykgY3VzdG9tQnV0dG9uczogeyBodG1sOiBzdHJpbmcsIGNsczogc3RyaW5nLCBvbmNsaWNrOiBzdHJpbmcgfVtdO1xyXG5cclxuICBASW5wdXQoJ2Nscy1wYW5lbCcpIGNsc1BhbmVsOiBzdHJpbmc7XHJcbiAgQElucHV0KCdjbHMtdGl0bGUnKSBjbHNUaXRsZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgnY2xzLXRpdGxlLWNhcHRpb24nKSBjbHNUaXRsZUNhcHRpb246IHN0cmluZztcclxuICBASW5wdXQoJ2Nscy10aXRsZS1pY29uJykgY2xzVGl0bGVJY29uOiBzdHJpbmc7XHJcbiAgQElucHV0KCdjbHMtY29udGVudCcpIGNsc0NvbnRlbnQ6IHN0cmluZztcclxuICBASW5wdXQoJ2Nscy1jb2xsYXBzZS10b2dnbGUnKSBjbHNDb2xsYXBzZVRvZ2dsZTogc3RyaW5nO1xyXG5cclxuICBAVmlld0NoaWxkKCdwYW5lbCcsIHsgc3RhdGljOiB0cnVlIH0pIHBhbmVsOiBFbGVtZW50UmVmO1xyXG4gIHByaXZhdGUgY2xvbmVkRWxlbWVudDogYW55O1xyXG4gIHBhbmVsT2JqOiBhbnk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIGNyZWF0ZUVsZW1lbnQoKSB7XHJcbiAgICBhc2FwU2NoZWR1bGVyLnNjaGVkdWxlKCgpID0+IHtcclxuICAgICAgY29uc3Qgb3JpZ2luYWxFbGVtZW50ID0gJCh0aGlzLnBhbmVsLm5hdGl2ZUVsZW1lbnQpO1xyXG4gICAgICBPYmplY3RIZWxwZXIuaGlkZShvcmlnaW5hbEVsZW1lbnQpO1xyXG5cclxuICAgICAgaWYgKHRoaXMuY2xvbmVkRWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuY2xvbmVkRWxlbWVudC5jaGlsZHJlbigpLmFwcGVuZFRvKG9yaWdpbmFsRWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy5jbG9uZWRFbGVtZW50LnBhcmVudCgpLnJlbW92ZSgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLmNsb25lZEVsZW1lbnQgPSBvcmlnaW5hbEVsZW1lbnQuY2xvbmUoKTtcclxuICAgICAgb3JpZ2luYWxFbGVtZW50LmNoaWxkcmVuKCkuYXBwZW5kVG8odGhpcy5jbG9uZWRFbGVtZW50KTtcclxuICAgICAgT2JqZWN0SGVscGVyLnNob3codGhpcy5jbG9uZWRFbGVtZW50KTtcclxuICAgICAgb3JpZ2luYWxFbGVtZW50LnBhcmVudCgpLmFwcGVuZCh0aGlzLmNsb25lZEVsZW1lbnQpO1xyXG5cclxuICAgICAgdGhpcy5wYW5lbE9iaiA9IHRoaXMuY2xvbmVkRWxlbWVudC5wYW5lbCh7XHJcbiAgICAgICAgY3VzdG9tQnV0dG9uczogdGhpcy5jdXN0b21CdXR0b25zXHJcbiAgICAgIH0pLmRhdGEoJ3BhbmVsJyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5jcmVhdGVFbGVtZW50KCk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICB0aGlzLmNyZWF0ZUVsZW1lbnQoKTtcclxuICB9XHJcbn1cclxuIl19