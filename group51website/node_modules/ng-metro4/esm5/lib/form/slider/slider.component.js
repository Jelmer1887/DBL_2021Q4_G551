import { __decorate, __extends, __metadata } from "tslib";
import { Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';
import { ControlBase } from '../control-base';
import { DefaultValueAccessor } from '../../helper/default-value-accessor';
import { TypeAlias } from '../../helper/type-alias';
import { asapScheduler } from 'rxjs';
import { ObjectHelper } from '../../helper/object-helper';
var SliderComponent = /** @class */ (function (_super) {
    __extends(SliderComponent, _super);
    function SliderComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SliderComponent_1 = SliderComponent;
    SliderComponent.prototype.createControl = function () {
        var _this = this;
        return new Promise(function (complete) {
            var originalElement = $(_this.input.nativeElement);
            ObjectHelper.hide(originalElement);
            if (_this.clonedElement) {
                _this.clonedElement.parent().parent().find('.slider-min-max').remove();
                _this.clonedElement.parent().remove();
            }
            _this.clonedElement = originalElement.clone();
            ObjectHelper.show(_this.clonedElement);
            originalElement.parent().append(_this.clonedElement);
            _this.slider = _this.clonedElement.slider().data('slider');
            _this.clonedElement.parent().find('button.marker').one('blur', function () {
                _this.touchCallback();
            });
            _this.clonedElement.on('change', function () {
                asapScheduler.schedule(function () {
                    _this.changeValue(+_this.clonedElement.val());
                });
            });
            complete();
        });
    };
    SliderComponent.prototype.disable = function (disabled) {
        if (disabled) {
            this.clonedElement.parent().addClass('disabled');
        }
        else {
            this.clonedElement.parent().removeClass('disabled');
        }
    };
    SliderComponent.prototype.newValue = function () {
        if (!this.slider) {
            return;
        }
        this.slider.val(this.innerValue);
    };
    SliderComponent.prototype.newClassValue = function (newClasses, oldClasses) {
        if (this.clonedElement) {
            var target_1 = this.clonedElement.parent();
            oldClasses.forEach(function (cls) {
                target_1.removeClass(cls);
            });
            newClasses.forEach(function (cls) {
                target_1.addClass(cls);
            });
        }
    };
    var SliderComponent_1;
    __decorate([
        Input('min'),
        __metadata("design:type", Number)
    ], SliderComponent.prototype, "min", void 0);
    __decorate([
        Input('max'),
        __metadata("design:type", Number)
    ], SliderComponent.prototype, "max", void 0);
    __decorate([
        Input('show-min-max'),
        __metadata("design:type", Boolean)
    ], SliderComponent.prototype, "showMinMax", void 0);
    __decorate([
        Input('accuracy'),
        __metadata("design:type", Number)
    ], SliderComponent.prototype, "accuracy", void 0);
    __decorate([
        Input('buffer'),
        __metadata("design:type", Number)
    ], SliderComponent.prototype, "buffer", void 0);
    __decorate([
        Input('hint'),
        __metadata("design:type", Boolean)
    ], SliderComponent.prototype, "hint", void 0);
    __decorate([
        Input('hint-always'),
        __metadata("design:type", Boolean)
    ], SliderComponent.prototype, "hintAlways", void 0);
    __decorate([
        Input('hint-position'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "hintPosition", void 0);
    __decorate([
        Input('hint-mask'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "hintMask", void 0);
    __decorate([
        Input('vertical'),
        __metadata("design:type", Boolean)
    ], SliderComponent.prototype, "vertical", void 0);
    __decorate([
        Input('size'),
        __metadata("design:type", Number)
    ], SliderComponent.prototype, "size", void 0);
    __decorate([
        Input('thin'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "thin", void 0);
    __decorate([
        Input('cycle-marker'),
        __metadata("design:type", Boolean)
    ], SliderComponent.prototype, "cycleMarker", void 0);
    __decorate([
        Input('cls-slider'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "clsSlider", void 0);
    __decorate([
        Input('cls-backside'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "clsBackside", void 0);
    __decorate([
        Input('cls-complete'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "clsComplete", void 0);
    __decorate([
        Input('cls-buffer'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "clsBuffer", void 0);
    __decorate([
        Input('cls-marker'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "clsMarker", void 0);
    __decorate([
        Input('cls-hint'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "clsHint", void 0);
    __decorate([
        Input('cls-min-max'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "clsMinMax", void 0);
    __decorate([
        Input('cls-min'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "clsMin", void 0);
    __decorate([
        Input('cls-max'),
        __metadata("design:type", String)
    ], SliderComponent.prototype, "clsMax", void 0);
    __decorate([
        ViewChild('input', { static: true }),
        __metadata("design:type", ElementRef)
    ], SliderComponent.prototype, "input", void 0);
    SliderComponent = SliderComponent_1 = __decorate([
        Component({
            selector: 'm4-slider',
            template: "<input type=\"number\" #input\r\n\r\n\r\n       [attr.data-min]=\"min\"\r\n       [attr.data-max]=\"max\"\r\n       [attr.data-show-min-max]=\"showMinMax\"\r\n       [attr.data-accuracy]=\"accuracy\"\r\n       [attr.data-buffer]=\"buffer\"\r\n       [attr.data-hint]=\"hint\"\r\n       [attr.data-hint-always]=\"hintAlways\"\r\n       [attr.data-hint-position]=\"hintPosition\"\r\n       [attr.data-hint-mask]=\"hintMask\"\r\n       [attr.data-vertical]=\"vertical\"\r\n       [attr.data-size]=\"size\"\r\n\r\n       [attr.data-cls-slider]=\"clsSlider\"\r\n       [attr.data-cls-backside]=\"clsBackside\"\r\n       [attr.data-cls-complete]=\"clsComplete\"\r\n       [attr.data-cls-buffer]=\"clsBuffer\"\r\n       [attr.data-cls-marker]=\"clsMarker\"\r\n       [attr.data-cls-hint]=\"clsHint\"\r\n       [attr.data-cls-min-max]=\"clsMinMax\"\r\n       [attr.data-cls-min]=\"clsMin\"\r\n       [attr.data-cls-max]=\"clsMax\"\r\n\r\n       [class.thin]=\"thin === 'thin'\"\r\n       [class.ultra-thin]=\"thin === 'ultra-thin'\"\r\n       [class.cycle-marker]=\"cycleMarker\">\r\n",
            providers: [DefaultValueAccessor.get(SliderComponent_1), TypeAlias.get(SliderComponent_1)],
            encapsulation: ViewEncapsulation.None,
            styles: [".slider.primary .complete{background-color:#0366d6}.slider.primary .backside{background-color:#3969a0}.slider.secondary .complete{background-color:#607d8b}.slider.secondary .backside{background-color:#767676}.slider.success .complete{background-color:#60a917}.slider.success .backside{background-color:#607947}.slider.alert .complete{background-color:#ce352c}.slider.alert .backside{background-color:#906d6b}.slider.warning .complete{background-color:#ff9447}.slider.warning .backside{background-color:#d19c75}.slider.yellow .complete{background-color:#ffe484}.slider.yellow .backside{background-color:#e0d3a3}.slider.info .complete{background-color:#5ebdec}.slider.info .backside{background-color:#8baebf}.slider.dark .backside,.slider.dark .complete{background-color:#505050}.slider.light .backside,.slider.light .complete{background-color:#f8f8f8}m4-slider .disabled .complete,m4-slider .disabled button.marker{background-color:#989898}"]
        })
    ], SliderComponent);
    return SliderComponent;
}(ControlBase));
export { SliderComponent };
//# sourceMappingURL=data:application/json;base64,