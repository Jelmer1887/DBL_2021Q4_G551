import { __decorate, __extends, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild } from '@angular/core';
import { DefaultValueAccessor } from '../../helper/default-value-accessor';
import { ControlBase } from '../control-base';
import { TypeAlias } from '../../helper/type-alias';
import { asapScheduler } from 'rxjs';
import { ObjectHelper } from '../../helper/object-helper';
var MaterialInputComponent = /** @class */ (function (_super) {
    __extends(MaterialInputComponent, _super);
    function MaterialInputComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'text';
        _this.placeholder = '';
        _this.readonly = false;
        return _this;
    }
    MaterialInputComponent_1 = MaterialInputComponent;
    MaterialInputComponent.prototype.createControl = function () {
        var _this = this;
        return new Promise(function (complete) {
            var originalElement = $(_this.input.nativeElement);
            ObjectHelper.hide(originalElement);
            if (_this.clonedElement) {
                _this.clonedElement.parent().remove();
            }
            _this.clonedElement = originalElement.clone();
            ObjectHelper.show(_this.clonedElement);
            originalElement.parent().append(_this.clonedElement);
            _this.materialInput = _this.clonedElement.materialinput().data('materialinput');
            _this.clonedElement.one('blur', function () {
                _this.touchCallback();
            });
            _this.clonedElement.on('keydown change', function () {
                asapScheduler.schedule(function () {
                    var newValue = _this.clonedElement.val();
                    if (_this.type === 'number') {
                        newValue = +newValue;
                    }
                    _this.changeValue(newValue);
                }, 1);
            });
            complete();
        });
    };
    MaterialInputComponent.prototype.disable = function (disabled) {
        if (disabled) {
            this.clonedElement.attr('disabled', 'disabled');
            this.materialInput.disable();
        }
        else {
            this.clonedElement.removeAttr('disabled');
            this.materialInput.enable();
        }
    };
    MaterialInputComponent.prototype.newValue = function () {
        if (!this.materialInput) {
            return;
        }
        this.clonedElement.val(this.innerValue);
    };
    MaterialInputComponent.prototype.newClassValue = function (newClasses, oldClasses) {
        if (this.clonedElement) {
            var target_1 = this.clonedElement.parent();
            oldClasses.forEach(function (cls) {
                target_1.removeClass(cls);
            });
            newClasses.forEach(function (cls) {
                target_1.addClass(cls);
            });
        }
    };
    var MaterialInputComponent_1;
    __decorate([
        Input('type'),
        __metadata("design:type", String)
    ], MaterialInputComponent.prototype, "type", void 0);
    __decorate([
        Input('placeholder'),
        __metadata("design:type", Object)
    ], MaterialInputComponent.prototype, "placeholder", void 0);
    __decorate([
        Input('readonly'),
        __metadata("design:type", Object)
    ], MaterialInputComponent.prototype, "readonly", void 0);
    __decorate([
        Input('label'),
        __metadata("design:type", String)
    ], MaterialInputComponent.prototype, "label", void 0);
    __decorate([
        Input('informer'),
        __metadata("design:type", String)
    ], MaterialInputComponent.prototype, "informer", void 0);
    __decorate([
        Input('icon'),
        __metadata("design:type", String)
    ], MaterialInputComponent.prototype, "icon", void 0);
    __decorate([
        Input('cls-line'),
        __metadata("design:type", String)
    ], MaterialInputComponent.prototype, "clsLine", void 0);
    __decorate([
        Input('cls-label'),
        __metadata("design:type", String)
    ], MaterialInputComponent.prototype, "clsLabel", void 0);
    __decorate([
        Input('cls-informer'),
        __metadata("design:type", String)
    ], MaterialInputComponent.prototype, "clsInformer", void 0);
    __decorate([
        Input('cls-icon'),
        __metadata("design:type", String)
    ], MaterialInputComponent.prototype, "clsIcon", void 0);
    __decorate([
        ViewChild('input', { static: true }),
        __metadata("design:type", ElementRef)
    ], MaterialInputComponent.prototype, "input", void 0);
    MaterialInputComponent = MaterialInputComponent_1 = __decorate([
        Component({
            selector: 'm4-material-input',
            template: "<input [type]=\"type\" #input\r\n\r\n\r\n       [placeholder]=\"placeholder\"\r\n       [readonly]=\"readonly\"\r\n\r\n       [attr.data-icon]=\"icon\"\r\n       [attr.data-label]=\"label\"\r\n       [attr.data-informer]=\"informer\"\r\n       [attr.data-cls-line]=\"clsLine\"\r\n       [attr.data-cls-label]=\"clsLabel\"\r\n       [attr.data-cls-informer]=\"clsInformer\"\r\n       [attr.data-cls-icon]=\"clsIcon\">\r\n",
            providers: [DefaultValueAccessor.get(MaterialInputComponent_1), TypeAlias.get(MaterialInputComponent_1)],
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [""]
        })
    ], MaterialInputComponent);
    return MaterialInputComponent;
}(ControlBase));
export { MaterialInputComponent };
//# sourceMappingURL=data:application/json;base64,