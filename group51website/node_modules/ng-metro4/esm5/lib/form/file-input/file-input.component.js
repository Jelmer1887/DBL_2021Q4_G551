import { __decorate, __extends, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';
import { ControlBase } from '../control-base';
import { DefaultValueAccessor } from '../../helper/default-value-accessor';
import { TypeAlias } from '../../helper/type-alias';
import { ObjectHelper } from '../../helper/object-helper';
var FileInputComponent = /** @class */ (function (_super) {
    __extends(FileInputComponent, _super);
    function FileInputComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.multiple = false;
        _this.accept = '';
        _this.read = '';
        _this.drop = false;
        return _this;
    }
    FileInputComponent_1 = FileInputComponent;
    FileInputComponent.prototype.createControl = function () {
        var _this = this;
        return new Promise(function (complete) {
            var originalElement = $(_this.input.nativeElement);
            ObjectHelper.hide(originalElement);
            if (_this.clonedElement) {
                _this.clonedElement.parent().remove();
            }
            _this.clonedElement = originalElement.clone();
            ObjectHelper.show(_this.clonedElement);
            originalElement.parent().append(_this.clonedElement);
            _this.fileInput = _this.clonedElement.file().data('file');
            if (_this.drop) {
                if (_this.buttonTitle) {
                    var captionElement = _this.clonedElement.closest('label.drop-zone').find('span.caption');
                    captionElement.html(_this.buttonTitle);
                }
                if (_this.infoText) {
                    _this.updateInfoText();
                }
            }
            _this.fileInput.options.onSelect = function (files) {
                if (_this.multiple) {
                    var result = [];
                    for (var i = 0; i < files.length; i++) {
                        result.push(files[i]);
                    }
                    if (_this.read) {
                        _this.readFiles(files);
                    }
                    else {
                        _this.changeValue(result);
                    }
                }
                else {
                    if (_this.read) {
                        _this.readFiles(files);
                    }
                    else {
                        _this.changeValue(files[0]);
                    }
                }
                if (_this.drop && _this.infoText) {
                    _this.updateInfoText();
                }
            };
            _this.clonedElement.one('blur', function () {
                _this.touchCallback();
            });
            complete();
        });
    };
    FileInputComponent.prototype.readFiles = function (files) {
        var _this = this;
        var fileLoadPromises = [];
        var _loop_1 = function (i) {
            var file = files[i];
            var loadPromise = new Promise(function (resolve) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    resolve({ content: reader.result, file: file });
                };
                switch (_this.read) {
                    case 'arrayBuffer':
                        reader.readAsArrayBuffer(file);
                        break;
                    case 'binaryString':
                        reader.readAsBinaryString(file);
                        break;
                    case 'dataUrl':
                        reader.readAsDataURL(file);
                        break;
                    case 'text':
                    default:
                        reader.readAsText(file);
                        break;
                }
            });
            fileLoadPromises.push(loadPromise);
        };
        for (var i = 0; i < files.length; i++) {
            _loop_1(i);
        }
        Promise.all(fileLoadPromises).then(function (fileEntries) {
            if (_this.multiple) {
                _this.changeValue(fileEntries);
            }
            else {
                _this.changeValue(fileEntries[0]);
            }
        });
    };
    FileInputComponent.prototype.disable = function (disabled) {
        if (disabled) {
            this.fileInput.disable();
        }
        else {
            this.fileInput.enable();
        }
    };
    FileInputComponent.prototype.newValue = function () {
        if (!this.fileInput || this.drop || this.read || !this.innerValue) {
            return;
        }
        var name;
        if (this.innerValue instanceof Array) {
            name = this.innerValue.map(function (v) {
                if (v instanceof File) {
                    return v.name;
                }
                else {
                    return v.file.name;
                }
            }).join(', ');
        }
        else {
            name = this.innerValue instanceof File ? this.innerValue.name : this.innerValue.file.name;
        }
        this.clonedElement.parent().find('span.caption').html(name);
    };
    FileInputComponent.prototype.newClassValue = function (newClasses, oldClasses) {
        if (this.clonedElement) {
            var target_1 = this.clonedElement.parent();
            oldClasses.forEach(function (cls) {
                target_1.removeClass(cls);
            });
            newClasses.forEach(function (cls) {
                target_1.addClass(cls);
            });
        }
    };
    FileInputComponent.prototype.updateInfoText = function () {
        var infoTextContent = this.infoText
            .split('{0}')
            .join(this.innerValue instanceof Array ? "" + this.innerValue.length : this.innerValue ? '1' : '0');
        var infoTextElement = this.clonedElement.closest('label.drop-zone').find('span.files');
        infoTextElement.html(infoTextContent);
    };
    var FileInputComponent_1;
    __decorate([
        Input('multiple'),
        __metadata("design:type", Object)
    ], FileInputComponent.prototype, "multiple", void 0);
    __decorate([
        Input('accept'),
        __metadata("design:type", Object)
    ], FileInputComponent.prototype, "accept", void 0);
    __decorate([
        Input('read'),
        __metadata("design:type", String)
    ], FileInputComponent.prototype, "read", void 0);
    __decorate([
        Input('prepend'),
        __metadata("design:type", String)
    ], FileInputComponent.prototype, "prepend", void 0);
    __decorate([
        Input('button-title'),
        __metadata("design:type", String)
    ], FileInputComponent.prototype, "buttonTitle", void 0);
    __decorate([
        Input('info-text'),
        __metadata("design:type", String)
    ], FileInputComponent.prototype, "infoText", void 0);
    __decorate([
        Input('drop'),
        __metadata("design:type", Object)
    ], FileInputComponent.prototype, "drop", void 0);
    __decorate([
        Input('cls-component'),
        __metadata("design:type", String)
    ], FileInputComponent.prototype, "clsComponent", void 0);
    __decorate([
        Input('cls-caption'),
        __metadata("design:type", String)
    ], FileInputComponent.prototype, "clsCaption", void 0);
    __decorate([
        Input('cls-prepend'),
        __metadata("design:type", String)
    ], FileInputComponent.prototype, "clsPrepend", void 0);
    __decorate([
        Input('cls-button'),
        __metadata("design:type", String)
    ], FileInputComponent.prototype, "clsButton", void 0);
    __decorate([
        ViewChild('input', { static: true }),
        __metadata("design:type", ElementRef)
    ], FileInputComponent.prototype, "input", void 0);
    FileInputComponent = FileInputComponent_1 = __decorate([
        Component({
            selector: 'm4-file-input',
            template: "<input type=\"file\" #input\r\n\r\n\r\n       [accept]=\"accept\"\r\n       [multiple]=\"multiple\"\r\n       [attr.data-prepend]=\"prepend\"\r\n       [attr.data-button-title]=\"buttonTitle\"\r\n       [attr.data-mode]=\"drop === true ? 'drop' : null\"\r\n\r\n       [attr.data-cls-component]=\"clsComponent\"\r\n       [attr.data-cls-caption]=\"clsCaption\"\r\n       [attr.data-cls-prepend]=\"clsPrepend\"\r\n       [attr.data-cls-button]=\"clsButton\">\r\n",
            providers: [DefaultValueAccessor.get(FileInputComponent_1), TypeAlias.get(FileInputComponent_1)],
            changeDetection: ChangeDetectionStrategy.OnPush,
            encapsulation: ViewEncapsulation.None,
            styles: [".drop-zone.primary{outline-color:#0366d6}.drop-zone.secondary{outline-color:#607d8b}.drop-zone.success{outline-color:#60a917}.drop-zone.alert{outline-color:#ce352c}.drop-zone.warning{outline-color:#ff9447}.drop-zone.yellow{outline-color:#ffe484}.drop-zone.info{outline-color:#5ebdec}.drop-zone.dark{outline-color:#505050}.drop-zone.light{outline-color:#f8f8f8}"]
        })
    ], FileInputComponent);
    return FileInputComponent;
}(ControlBase));
export { FileInputComponent };
//# sourceMappingURL=data:application/json;base64,