import { ArrayHelper } from './array-helper';
import { CompareHelper } from './compare-helper';
export class ObjectHelper {
    /**
     * Compares to objects
     * @param firstObject The first object
     * @param secondObject The second object
     */
    static compare(firstObject, secondObject) {
        if (firstObject instanceof Array && secondObject instanceof Array) {
            if (ArrayHelper.sequenceEquals(secondObject, firstObject)) {
                return true;
            }
        }
        else {
            return CompareHelper.equal(firstObject, secondObject);
        }
        return false;
    }
    /**
     * Hides an HTML object
     * @param object The HTML object
     */
    static hide(object) {
        object.addClass('d-none');
    }
    /**
     * Shows an HTML object
     * @param object The HTML object
     */
    static show(object) {
        object.removeClass('d-none');
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JqZWN0LWhlbHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLW1ldHJvNC8iLCJzb3VyY2VzIjpbImxpYi9oZWxwZXIvb2JqZWN0LWhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRS9DLE1BQU0sT0FBTyxZQUFZO0lBQ3ZCOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQWdCLEVBQUUsWUFBaUI7UUFDdkQsSUFBSSxXQUFXLFlBQVksS0FBSyxJQUFJLFlBQVksWUFBWSxLQUFLLEVBQUU7WUFDakUsSUFBSSxXQUFXLENBQUMsY0FBYyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsRUFBRTtnQkFDekQsT0FBTyxJQUFJLENBQUM7YUFDYjtTQUNGO2FBQU07WUFDTCxPQUFPLGFBQWEsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLFlBQVksQ0FBQyxDQUFDO1NBQ3ZEO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFXO1FBQzVCLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVEOzs7T0FHRztJQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBVztRQUM1QixNQUFNLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQy9CLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXJyYXlIZWxwZXJ9IGZyb20gJy4vYXJyYXktaGVscGVyJztcclxuaW1wb3J0IHtDb21wYXJlSGVscGVyfSBmcm9tICcuL2NvbXBhcmUtaGVscGVyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBPYmplY3RIZWxwZXIge1xyXG4gIC8qKlxyXG4gICAqIENvbXBhcmVzIHRvIG9iamVjdHNcclxuICAgKiBAcGFyYW0gZmlyc3RPYmplY3QgVGhlIGZpcnN0IG9iamVjdFxyXG4gICAqIEBwYXJhbSBzZWNvbmRPYmplY3QgVGhlIHNlY29uZCBvYmplY3RcclxuICAgKi9cclxuICBwdWJsaWMgc3RhdGljIGNvbXBhcmUoZmlyc3RPYmplY3Q6IGFueSwgc2Vjb25kT2JqZWN0OiBhbnkpIHtcclxuICAgIGlmIChmaXJzdE9iamVjdCBpbnN0YW5jZW9mIEFycmF5ICYmIHNlY29uZE9iamVjdCBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgIGlmIChBcnJheUhlbHBlci5zZXF1ZW5jZUVxdWFscyhzZWNvbmRPYmplY3QsIGZpcnN0T2JqZWN0KSkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gQ29tcGFyZUhlbHBlci5lcXVhbChmaXJzdE9iamVjdCwgc2Vjb25kT2JqZWN0KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBIaWRlcyBhbiBIVE1MIG9iamVjdFxyXG4gICAqIEBwYXJhbSBvYmplY3QgVGhlIEhUTUwgb2JqZWN0XHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyBoaWRlKG9iamVjdDogYW55KSB7XHJcbiAgICBvYmplY3QuYWRkQ2xhc3MoJ2Qtbm9uZScpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2hvd3MgYW4gSFRNTCBvYmplY3RcclxuICAgKiBAcGFyYW0gb2JqZWN0IFRoZSBIVE1MIG9iamVjdFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgc2hvdyhvYmplY3Q6IGFueSkge1xyXG4gICAgb2JqZWN0LnJlbW92ZUNsYXNzKCdkLW5vbmUnKTtcclxuICB9XHJcbn1cclxuIl19