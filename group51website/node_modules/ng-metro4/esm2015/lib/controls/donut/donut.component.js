import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild } from '@angular/core';
import { asapScheduler } from 'rxjs';
import { ObjectHelper } from '../../helper/object-helper';
let DonutComponent = class DonutComponent {
    constructor() { }
    createControl() {
        asapScheduler.schedule(() => {
            const originalElement = $(this.donut.nativeElement);
            ObjectHelper.hide(originalElement);
            if (this.clonedElement) {
                this.clonedElement.remove();
            }
            this.clonedElement = originalElement.clone();
            ObjectHelper.show(this.clonedElement);
            originalElement.parent().append(this.clonedElement);
            this.donutObj = this.clonedElement.donut().data('donut');
        });
    }
    ngOnInit() {
        this.createControl();
    }
    ngOnChanges(changes) {
        if (Object.keys(changes).filter(c => c !== 'value').length > 0) {
            this.createControl();
        }
        else {
            if (this.donutObj) {
                this.donutObj.val(this.value);
            }
        }
    }
};
__decorate([
    Input(),
    __metadata("design:type", Number)
], DonutComponent.prototype, "value", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], DonutComponent.prototype, "size", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], DonutComponent.prototype, "radius", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], DonutComponent.prototype, "hole", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DonutComponent.prototype, "background", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DonutComponent.prototype, "color", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DonutComponent.prototype, "stroke", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DonutComponent.prototype, "fill", void 0);
__decorate([
    Input('font-size'),
    __metadata("design:type", Number)
], DonutComponent.prototype, "fontSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], DonutComponent.prototype, "total", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DonutComponent.prototype, "caption", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], DonutComponent.prototype, "animate", void 0);
__decorate([
    Input('show-value'),
    __metadata("design:type", Boolean)
], DonutComponent.prototype, "showValue", void 0);
__decorate([
    ViewChild('donut', { static: true }),
    __metadata("design:type", ElementRef)
], DonutComponent.prototype, "donut", void 0);
DonutComponent = __decorate([
    Component({
        selector: 'm4-donut',
        template: "<div #donut\r\n     [attr.data-value]=\"value\"\r\n     [attr.data-size]=\"size\"\r\n     [attr.data-radius]=\"radius\"\r\n     [attr.data-hole]=\"hole\"\r\n     [attr.data-background]=\"background\"\r\n     [attr.data-color]=\"color\"\r\n     [attr.data-stroke]=\"stroke\"\r\n     [attr.data-fill]=\"fill\"\r\n     [attr.data-font-size]=\"fontSize\"\r\n     [attr.data-total]=\"total\"\r\n     [attr.data-cap]=\"caption\"\r\n     [attr.data-animate]=\"animate\"\r\n     [attr.data-show-value]=\"showValue\"></div>\r\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [""]
    }),
    __metadata("design:paramtypes", [])
], DonutComponent);
export { DonutComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9udXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbWV0cm80LyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xzL2RvbnV0L2RvbnV0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFvQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakksT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUNuQyxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFVeEQsSUFBYSxjQUFjLEdBQTNCLE1BQWEsY0FBYztJQW1CekIsZ0JBQWdCLENBQUM7SUFFVCxhQUFhO1FBQ25CLGFBQWEsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFO1lBQzFCLE1BQU0sZUFBZSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3BELFlBQVksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7WUFFbkMsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO2dCQUN0QixJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDO2FBQzdCO1lBRUQsSUFBSSxDQUFDLGFBQWEsR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDN0MsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDdEMsZUFBZSxDQUFDLE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7WUFFcEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMzRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxPQUFPLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzlELElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztTQUN0QjthQUFNO1lBQ0wsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDL0I7U0FDRjtJQUNILENBQUM7Q0FDRixDQUFBO0FBbERVO0lBQVIsS0FBSyxFQUFFOzs2Q0FBZTtBQUNkO0lBQVIsS0FBSyxFQUFFOzs0Q0FBYztBQUNiO0lBQVIsS0FBSyxFQUFFOzs4Q0FBZ0I7QUFDZjtJQUFSLEtBQUssRUFBRTs7NENBQWM7QUFDYjtJQUFSLEtBQUssRUFBRTs7a0RBQW9CO0FBQ25CO0lBQVIsS0FBSyxFQUFFOzs2Q0FBZTtBQUNkO0lBQVIsS0FBSyxFQUFFOzs4Q0FBZ0I7QUFDZjtJQUFSLEtBQUssRUFBRTs7NENBQWM7QUFDRjtJQUFuQixLQUFLLENBQUMsV0FBVyxDQUFDOztnREFBa0I7QUFDNUI7SUFBUixLQUFLLEVBQUU7OzZDQUFlO0FBQ2Q7SUFBUixLQUFLLEVBQUU7OytDQUFpQjtBQUNoQjtJQUFSLEtBQUssRUFBRTs7K0NBQWlCO0FBQ0o7SUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7aURBQW9CO0FBRUY7SUFBckMsU0FBUyxDQUFDLE9BQU8sRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzs4QkFBZ0IsVUFBVTs2Q0FBQztBQWZyRCxjQUFjO0lBTjFCLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxVQUFVO1FBQ3BCLGtoQkFBcUM7UUFFckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O0tBQ2hELENBQUM7O0dBQ1csY0FBYyxDQW1EMUI7U0FuRFksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIE9uQ2hhbmdlcywgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge2FzYXBTY2hlZHVsZXJ9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge09iamVjdEhlbHBlcn0gZnJvbSAnLi4vLi4vaGVscGVyL29iamVjdC1oZWxwZXInO1xyXG5cclxuZGVjbGFyZSB2YXIgJDogYW55O1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdtNC1kb251dCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2RvbnV0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9kb251dC5jb21wb25lbnQuY3NzJ10sXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIERvbnV0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xyXG4gIEBJbnB1dCgpIHZhbHVlOiBudW1iZXI7XHJcbiAgQElucHV0KCkgc2l6ZTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpIHJhZGl1czogbnVtYmVyO1xyXG4gIEBJbnB1dCgpIGhvbGU6IG51bWJlcjtcclxuICBASW5wdXQoKSBiYWNrZ3JvdW5kOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgY29sb3I6IHN0cmluZztcclxuICBASW5wdXQoKSBzdHJva2U6IHN0cmluZztcclxuICBASW5wdXQoKSBmaWxsOiBzdHJpbmc7XHJcbiAgQElucHV0KCdmb250LXNpemUnKSBmb250U2l6ZTogbnVtYmVyO1xyXG4gIEBJbnB1dCgpIHRvdGFsOiBudW1iZXI7XHJcbiAgQElucHV0KCkgY2FwdGlvbjogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGFuaW1hdGU6IG51bWJlcjtcclxuICBASW5wdXQoJ3Nob3ctdmFsdWUnKSBzaG93VmFsdWU6IGJvb2xlYW47XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2RvbnV0JywgeyBzdGF0aWM6IHRydWUgfSkgcHJpdmF0ZSBkb251dDogRWxlbWVudFJlZjtcclxuICBwcml2YXRlIGNsb25lZEVsZW1lbnQ6IGFueTtcclxuICBwcml2YXRlIGRvbnV0T2JqOiBhbnk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIHByaXZhdGUgY3JlYXRlQ29udHJvbCgpIHtcclxuICAgIGFzYXBTY2hlZHVsZXIuc2NoZWR1bGUoKCkgPT4ge1xyXG4gICAgICBjb25zdCBvcmlnaW5hbEVsZW1lbnQgPSAkKHRoaXMuZG9udXQubmF0aXZlRWxlbWVudCk7XHJcbiAgICAgIE9iamVjdEhlbHBlci5oaWRlKG9yaWdpbmFsRWxlbWVudCk7XHJcblxyXG4gICAgICBpZiAodGhpcy5jbG9uZWRFbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5jbG9uZWRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLmNsb25lZEVsZW1lbnQgPSBvcmlnaW5hbEVsZW1lbnQuY2xvbmUoKTtcclxuICAgICAgT2JqZWN0SGVscGVyLnNob3codGhpcy5jbG9uZWRFbGVtZW50KTtcclxuICAgICAgb3JpZ2luYWxFbGVtZW50LnBhcmVudCgpLmFwcGVuZCh0aGlzLmNsb25lZEVsZW1lbnQpO1xyXG5cclxuICAgICAgdGhpcy5kb251dE9iaiA9IHRoaXMuY2xvbmVkRWxlbWVudC5kb251dCgpLmRhdGEoJ2RvbnV0Jyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5jcmVhdGVDb250cm9sKCk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBpZiAoT2JqZWN0LmtleXMoY2hhbmdlcykuZmlsdGVyKGMgPT4gYyAhPT0gJ3ZhbHVlJykubGVuZ3RoID4gMCkge1xyXG4gICAgICB0aGlzLmNyZWF0ZUNvbnRyb2woKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmICh0aGlzLmRvbnV0T2JqKSB7XHJcbiAgICAgICAgdGhpcy5kb251dE9iai52YWwodGhpcy52YWx1ZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19