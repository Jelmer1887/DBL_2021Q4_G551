import { __decorate, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
let NotifyService = class NotifyService {
    constructor() { }
    /**
     * Setup the notify system
     * @param options The options for the setup
     */
    setup(options) {
        window.Metro.notify.setup(options);
    }
    /**
     * Reset the settings of the notify system
     */
    reset() {
        window.Metro.notify.reset();
    }
    /**
     * Create a notify
     * @param message The message
     * @param title The title
     * @param options Optional options object
     */
    create(message, title, options) {
        const closeSubject$ = new Subject();
        window.Metro.notify.create(message, title, Object.assign({ onClose: () => {
                closeSubject$.next();
                closeSubject$.complete();
            } }, options));
        return closeSubject$.asObservable();
    }
};
NotifyService = __decorate([
    Injectable(),
    __metadata("design:paramtypes", [])
], NotifyService);
export { NotifyService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZ5LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1tZXRybzQvIiwic291cmNlcyI6WyJsaWIvaW5mb3JtYXRpb24vbm90aWZ5L25vdGlmeS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBYSxPQUFPLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFtQnpDLElBQWEsYUFBYSxHQUExQixNQUFhLGFBQWE7SUFFeEIsZ0JBQWdCLENBQUM7SUFFakI7OztPQUdHO0lBQ0ksS0FBSyxDQUFDLE9BQTJCO1FBQ2hDLE1BQU8sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQ7O09BRUc7SUFDSSxLQUFLO1FBQ0osTUFBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksTUFBTSxDQUFDLE9BQWUsRUFBRSxLQUFjLEVBQUUsT0FBdUI7UUFDcEUsTUFBTSxhQUFhLEdBQUcsSUFBSSxPQUFPLEVBQU8sQ0FBQztRQUVuQyxNQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLEtBQUssa0JBQzlDLE9BQU8sRUFBRSxHQUFHLEVBQUU7Z0JBQ1osYUFBYSxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUNyQixhQUFhLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDM0IsQ0FBQyxJQUNFLE9BQU8sRUFDVixDQUFDO1FBRUgsT0FBTyxhQUFhLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDdEMsQ0FBQztDQUNGLENBQUE7QUF0Q1ksYUFBYTtJQUR6QixVQUFVLEVBQUU7O0dBQ0EsYUFBYSxDQXNDekI7U0F0Q1ksYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtPYnNlcnZhYmxlLCBTdWJqZWN0fSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHtFYXNpbmdUeXBlfSBmcm9tICcuLi8uLi9oZWxwZXIvdHlwZXMnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBOb3RpZnlTZXR1cE9wdGlvbnMge1xyXG4gIGNvbnRhaW5lcj86IHN0cmluZztcclxuICB3aWR0aD86IHN0cmluZztcclxuICB0aW1lb3V0PzogbnVtYmVyO1xyXG4gIGR1cmF0aW9uPzogbnVtYmVyO1xyXG4gIGRpc3RhbmNlPzogc3RyaW5nO1xyXG4gIGFuaW1hdGlvbj86IEVhc2luZ1R5cGU7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTm90aWZ5T3B0aW9ucyB7XHJcbiAga2VlcE9wZW4/OiBib29sZWFuO1xyXG4gIGNscz86IHN0cmluZztcclxuICB3aWR0aD86IHN0cmluZztcclxufVxyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgTm90aWZ5U2VydmljZSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNldHVwIHRoZSBub3RpZnkgc3lzdGVtXHJcbiAgICogQHBhcmFtIG9wdGlvbnMgVGhlIG9wdGlvbnMgZm9yIHRoZSBzZXR1cFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzZXR1cChvcHRpb25zOiBOb3RpZnlTZXR1cE9wdGlvbnMpIHtcclxuICAgICg8YW55PndpbmRvdykuTWV0cm8ubm90aWZ5LnNldHVwKG9wdGlvbnMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUmVzZXQgdGhlIHNldHRpbmdzIG9mIHRoZSBub3RpZnkgc3lzdGVtXHJcbiAgICovXHJcbiAgcHVibGljIHJlc2V0KCkge1xyXG4gICAgKDxhbnk+d2luZG93KS5NZXRyby5ub3RpZnkucmVzZXQoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhIG5vdGlmeVxyXG4gICAqIEBwYXJhbSBtZXNzYWdlIFRoZSBtZXNzYWdlXHJcbiAgICogQHBhcmFtIHRpdGxlIFRoZSB0aXRsZVxyXG4gICAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbmFsIG9wdGlvbnMgb2JqZWN0XHJcbiAgICovXHJcbiAgcHVibGljIGNyZWF0ZShtZXNzYWdlOiBzdHJpbmcsIHRpdGxlPzogc3RyaW5nLCBvcHRpb25zPzogTm90aWZ5T3B0aW9ucyk6IE9ic2VydmFibGU8dm9pZD4ge1xyXG4gICAgY29uc3QgY2xvc2VTdWJqZWN0JCA9IG5ldyBTdWJqZWN0PGFueT4oKTtcclxuXHJcbiAgICAoPGFueT53aW5kb3cpLk1ldHJvLm5vdGlmeS5jcmVhdGUobWVzc2FnZSwgdGl0bGUsIHtcclxuICAgICAgb25DbG9zZTogKCkgPT4ge1xyXG4gICAgICAgIGNsb3NlU3ViamVjdCQubmV4dCgpO1xyXG4gICAgICAgIGNsb3NlU3ViamVjdCQuY29tcGxldGUoKTtcclxuICAgICAgfSxcclxuICAgICAgLi4ub3B0aW9uc1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGNsb3NlU3ViamVjdCQuYXNPYnNlcnZhYmxlKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==