import { ControlBase } from '../control-base';
import { FileReadModeType } from '../../helper/types';
import * as ɵngcc0 from '@angular/core';
export interface FileEntry {
    file: File;
    content: any;
}
export declare class FileInputComponent extends ControlBase<File | File[] | FileEntry | FileEntry[]> {
    multiple: boolean;
    accept: string;
    read: FileReadModeType;
    prepend: string;
    buttonTitle: string;
    infoText: string;
    drop: boolean;
    clsComponent: string;
    clsCaption: string;
    clsPrepend: string;
    clsButton: string;
    private input;
    private fileInput;
    private clonedElement;
    createControl(): Promise<void>;
    readFiles(files: File[]): void;
    disable(disabled: boolean): void;
    newValue(): void;
    newClassValue(newClasses: string[], oldClasses: string[]): void;
    private updateInfoText;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FileInputComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<FileInputComponent, "m4-file-input", never, { "multiple": "multiple"; "accept": "accept"; "read": "read"; "drop": "drop"; "prepend": "prepend"; "buttonTitle": "button-title"; "infoText": "info-text"; "clsComponent": "cls-component"; "clsCaption": "cls-caption"; "clsPrepend": "cls-prepend"; "clsButton": "cls-button"; }, {}, never, never>;
}

//# sourceMappingURL=file-input.component.d.ts.map