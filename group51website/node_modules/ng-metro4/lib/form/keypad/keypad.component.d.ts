import { ControlBase } from '../control-base';
import { InputType, PositionType } from '../../helper/types';
import * as ɵngcc0 from '@angular/core';
export declare class KeypadComponent extends ControlBase<string | number> {
    type: InputType;
    keySize: number;
    keys: string[];
    keyLength: number;
    shuffle: boolean;
    shuffleCount: number;
    position: PositionType;
    dynamicPosition: boolean;
    serviceButtons: boolean;
    showValue: boolean;
    open: boolean;
    sizeAsKeys: boolean;
    clsKeypad: string;
    clsInput: string;
    clsKeys: string;
    clsKey: string;
    clsServiceKey: string;
    clsBackspace: string;
    clsClear: string;
    private input;
    private keypad;
    private clonedElement;
    createControl(): Promise<void>;
    disable(disabled: boolean): void;
    newValue(): void;
    newClassValue(newClasses: string[], oldClasses: string[]): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<KeypadComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<KeypadComponent, "m4-keypad", never, { "type": "type"; "keySize": "key-size"; "keys": "keys"; "keyLength": "key-length"; "shuffle": "shuffle"; "shuffleCount": "shuffle-count"; "position": "position"; "dynamicPosition": "dynamic-position"; "serviceButtons": "service-buttons"; "showValue": "show-value"; "open": "open"; "sizeAsKeys": "size-as-keys"; "clsKeypad": "cls-keypad"; "clsInput": "cls-input"; "clsKeys": "cls-keys"; "clsKey": "cls-key"; "clsServiceKey": "cls-service-key"; "clsBackspace": "cls-backspace"; "clsClear": "cls-clear"; }, {}, never, never>;
}

//# sourceMappingURL=keypad.component.d.ts.map