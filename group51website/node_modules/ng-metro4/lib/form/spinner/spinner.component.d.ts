import { ControlBase } from '../control-base';
import { SpinnerButtonPositionType } from '../../helper/types';
import * as ɵngcc0 from '@angular/core';
export declare class SpinnerComponent extends ControlBase<number> {
    step: number;
    plusIcon: string;
    minusIcon: string;
    buttonsPosition: SpinnerButtonPositionType;
    minValue: number;
    maxValue: number;
    fixed: number;
    hideCursor: boolean;
    clsSpinner: string;
    clsSpinnerInput: string;
    clsSpinnerButton: string;
    clsSpinnerButtonPlus: string;
    clsSpinnerButtonMinus: string;
    private input;
    private spinner;
    private clonedElement;
    createControl(): Promise<void>;
    disable(disabled: boolean): void;
    setValue(newValue: number): void;
    newValue(): void;
    newClassValue(newClasses: string[], oldClasses: string[]): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SpinnerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SpinnerComponent, "m4-spinner", never, { "step": "step"; "fixed": "fixed"; "hideCursor": "hide-cursor"; "plusIcon": "plus-icon"; "minusIcon": "minus-icon"; "buttonsPosition": "buttons-position"; "minValue": "min-value"; "maxValue": "max-value"; "clsSpinner": "cls-spinner"; "clsSpinnerInput": "cls-spinner-input"; "clsSpinnerButton": "cls-spinner-button"; "clsSpinnerButtonPlus": "cls-spinner-button-plus"; "clsSpinnerButtonMinus": "cls-spinner-button-minus"; }, {}, never, never>;
}

//# sourceMappingURL=spinner.component.d.ts.map