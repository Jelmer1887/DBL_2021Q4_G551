import { EventEmitter } from '@angular/core';
import { ControlBase } from '../control-base';
import { InputType } from '../../helper/types';
import * as ɵngcc0 from '@angular/core';
export declare class InputComponent extends ControlBase<string | number> {
    searchButtonClick: EventEmitter<string | number>;
    readonly: boolean;
    placeholder: string;
    type: InputType;
    defaultValue: any;
    size: number;
    prepend: string;
    append: string;
    clearButton: boolean;
    clearButtonIcon: string;
    revealButton: boolean;
    revealButtonIcon: string;
    customButtons: {
        html: string;
        cls: string;
        onclick: string;
    }[];
    searchButton: boolean;
    searchButtonIcon: string;
    autocomplete: string[];
    autocompleteListHeight: number;
    clsComponent: string;
    clsInput: string;
    clsPrepend: string;
    clsAppend: string;
    clsClearButton: string;
    clsRevealButton: string;
    clsCustomButton: string;
    private input;
    private inputObj;
    private clonedElement;
    createControl(): Promise<void>;
    disable(disabled: boolean): void;
    newValue(): void;
    newClassValue(newClasses: string[], oldClasses: string[]): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<InputComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<InputComponent, "m4-input", never, { "readonly": "readonly"; "placeholder": "placeholder"; "type": "type"; "customButtons": "custom-buttons"; "defaultValue": "default-value"; "size": "size"; "prepend": "prepend"; "append": "append"; "clearButton": "clear-button"; "clearButtonIcon": "clear-button-icon"; "revealButton": "reveal-button"; "revealButtonIcon": "reveal-button-icon"; "searchButton": "search-button"; "searchButtonIcon": "search-button-icon"; "autocomplete": "autocomplete"; "autocompleteListHeight": "autocomplete-list-height"; "clsComponent": "cls-component"; "clsInput": "cls-input"; "clsPrepend": "cls-prepend"; "clsAppend": "cls-append"; "clsClearButton": "cls-clear-button"; "clsRevealButton": "cls-reveal-button"; "clsCustomButton": "cls-custom-button"; }, { "searchButtonClick": "search-button-click"; }, never, never>;
}

//# sourceMappingURL=input.component.d.ts.map